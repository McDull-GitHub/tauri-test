(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["tauri"] = factory();
	else
		root["tauri"] = factory();
})(global, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/api/dependency-manager/util.ts":
/*!********************************************!*\
  !*** ./src/api/dependency-manager/util.ts ***!
  \********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:17-21 */
/*! CommonJS bailout: this is used directly at 11:19-23 */
/*! CommonJS bailout: this is used directly at 38:23-27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.semverLt = exports.padVersion = exports.updateNpmPackage = exports.installNpmDevPackage = exports.installNpmPackage = exports.getNpmPackageVersion = exports.getNpmLatestVersion = exports.getCrateLatestVersion = void 0;
var https_1 = __importDefault(__webpack_require__(/*! https */ "https"));
var spawn_1 = __webpack_require__(/*! ../../helpers/spawn */ "./src/helpers/spawn.ts");
var cross_spawn_1 = __webpack_require__(/*! cross-spawn */ "cross-spawn");
var app_paths_1 = __webpack_require__(/*! ../../helpers/app-paths */ "./src/helpers/app-paths.ts");
var fs_1 = __webpack_require__(/*! fs */ "fs");
var semver_1 = __importDefault(__webpack_require__(/*! semver */ "semver"));
var BASE_URL = 'https://docs.rs/crate/';
function getCrateLatestVersion(crateName) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {
                        var url = "" + BASE_URL + crateName;
                        https_1.default.get(url, function (res) {
                            if (res.statusCode !== 302 || !res.headers.location) {
                                reject(res);
                            }
                            else {
                                var version = res.headers.location.replace(url + '/', '');
                                resolve(version);
                            }
                        });
                    })];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.getCrateLatestVersion = getCrateLatestVersion;
function getNpmLatestVersion(packageName) {
    var child = cross_spawn_1.sync('npm', ['show', packageName, 'version'], {
        cwd: app_paths_1.appDir
    });
    return String(child.output[1]).replace('\n', '');
}
exports.getNpmLatestVersion = getNpmLatestVersion;
function getNpmPackageVersion(packageName) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, new Promise(function (resolve) {
                        var child = cross_spawn_1.sync('npm', ['list', packageName, 'version', '--depth', '0'], { cwd: app_paths_1.appDir });
                        var output = String(child.output[1]);
                        // eslint-disable-next-line security/detect-non-literal-regexp
                        var matches = new RegExp(packageName + '@(\\S+)', 'g').exec(output);
                        if (matches === null || matches === void 0 ? void 0 : matches[1]) {
                            resolve(matches[1]);
                        }
                        else {
                            resolve(null);
                        }
                    })];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.getNpmPackageVersion = getNpmPackageVersion;
function installNpmPackage(packageName) {
    var usesYarn = fs_1.existsSync(app_paths_1.resolve.app('yarn.lock'));
    if (usesYarn) {
        spawn_1.spawnSync('yarn', ['add', packageName], app_paths_1.appDir);
    }
    else {
        spawn_1.spawnSync('npm', ['install', packageName], app_paths_1.appDir);
    }
}
exports.installNpmPackage = installNpmPackage;
function installNpmDevPackage(packageName) {
    var usesYarn = fs_1.existsSync(app_paths_1.resolve.app('yarn.lock'));
    if (usesYarn) {
        spawn_1.spawnSync('yarn', ['add', packageName, '--dev'], app_paths_1.appDir);
    }
    else {
        spawn_1.spawnSync('npm', ['install', packageName, '--save-dev'], app_paths_1.appDir);
    }
}
exports.installNpmDevPackage = installNpmDevPackage;
function updateNpmPackage(packageName) {
    var usesYarn = fs_1.existsSync(app_paths_1.resolve.app('yarn.lock'));
    if (usesYarn) {
        spawn_1.spawnSync('yarn', ['upgrade', packageName, '--latest'], app_paths_1.appDir);
    }
    else {
        spawn_1.spawnSync('npm', ['install', packageName + "@latest"], app_paths_1.appDir);
    }
}
exports.updateNpmPackage = updateNpmPackage;
function padVersion(version) {
    var _a;
    var count = ((_a = version.match(/\./g)) !== null && _a !== void 0 ? _a : []).length;
    while (count < 2) {
        count++;
        version += '.0';
    }
    return version;
}
exports.padVersion = padVersion;
function semverLt(first, second) {
    return semver_1.default.lt(padVersion(first), padVersion(second));
}
exports.semverLt = semverLt;


/***/ }),

/***/ "./src/api/info.ts":
/*!*************************!*\
  !*** ./src/api/info.ts ***!
  \*************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, module, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:17-21 */
/*! CommonJS bailout: this is used directly at 11:19-23 */
/*! CommonJS bailout: this is used directly at 38:23-27 */
/*! CommonJS bailout: module.exports is used directly at 240:0-14 */
/***/ (function(module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var toml_1 = __importDefault(__webpack_require__(/*! @tauri-apps/toml */ "@tauri-apps/toml"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var fs_1 = __importDefault(__webpack_require__(/*! fs */ "fs"));
var os_1 = __importDefault(__webpack_require__(/*! os */ "os"));
var path_1 = __importDefault(__webpack_require__(/*! path */ "path"));
var app_paths_1 = __webpack_require__(/*! ../helpers/app-paths */ "./src/helpers/app-paths.ts");
var cross_spawn_1 = __webpack_require__(/*! cross-spawn */ "cross-spawn");
var non_webpack_require_1 = __importDefault(__webpack_require__(/*! ../helpers/non-webpack-require */ "./src/helpers/non-webpack-require.ts"));
var package_json_1 = __importDefault(__webpack_require__(/*! ../../package.json */ "./package.json"));
var get_script_version_1 = __importDefault(__webpack_require__(/*! ../helpers/get-script-version */ "./src/helpers/get-script-version.ts"));
var util_1 = __webpack_require__(/*! ./dependency-manager/util */ "./src/api/dependency-manager/util.ts");
function crateLatestVersion(name) {
    return __awaiter(this, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _b.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, util_1.getCrateLatestVersion(name)];
                case 1: return [2 /*return*/, _b.sent()];
                case 2:
                    _a = _b.sent();
                    return [2 /*return*/, undefined];
                case 3: return [2 /*return*/];
            }
        });
    });
}
/* eslint-disable security/detect-non-literal-fs-filename */
function dirTree(filename, recurse) {
    if (recurse === void 0) { recurse = true; }
    var stats = fs_1.default.lstatSync(filename);
    var info = {
        path: filename,
        name: path_1.default.basename(filename)
    };
    if (stats.isDirectory()) {
        info.type = 'folder';
        if (recurse) {
            info.children = fs_1.default.readdirSync(filename).map(function (child) {
                return dirTree(filename + '/' + child, false);
            });
        }
    }
    else {
        info.type = 'file';
    }
    return info;
}
function getVersion(command, args, formatter) {
    if (args === void 0) { args = []; }
    var version = get_script_version_1.default(command, args);
    if (version === null) {
        return chalk_1.default.red('Not installed');
    }
    else {
        return chalk_1.default.green(formatter === undefined ? version : formatter(version));
    }
}
function printInfo(info) {
    var suffix = info.suffix ? " " + info.suffix : '';
    console.log("" + (info.section ? '\n' : '') + info.key + (info.value === undefined ? '' : ' - ' + info.value) + suffix);
}
function printVersion(info) {
    var outdated = info.version &&
        info.targetVersion &&
        util_1.semverLt(info.version, info.targetVersion);
    console.log("" + (info.section ? '\n' : '') + info.key + (info.version
        ? ' - ' + chalk_1.default.green(info.version)
        : chalk_1.default.red('Not installed')) +
        (outdated && info.targetVersion
            ? " (" + chalk_1.default.red('outdated, latest: ' + info.targetVersion) + ")"
            : ''));
}
function readTomlFile(filepath) {
    try {
        var file = fs_1.default.readFileSync(filepath).toString();
        return toml_1.default.parse(file);
    }
    catch (_) {
        return null;
    }
}
function printAppInfo(tauriDir) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var lockPath, lock, lockPackages, manifestPath, manifest, tauriVersion, foundTauriVersions, manifestVersion, lockVersion, tauriVersionString, latestTauriCore, tauriMode, configPath, config;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    printInfo({ key: 'App', section: true });
                    lockPath = path_1.default.join(tauriDir, 'Cargo.lock');
                    lock = readTomlFile(lockPath);
                    lockPackages = lock
                        ? lock.package.filter(function (pkg) { return pkg.name === 'tauri'; })
                        : [];
                    manifestPath = path_1.default.join(tauriDir, 'Cargo.toml');
                    manifest = readTomlFile(manifestPath);
                    foundTauriVersions = [];
                    if (manifest && lock && lockPackages.length === 1) {
                        // everything looks good
                        foundTauriVersions.push(lockPackages[0].version);
                        tauriVersion = chalk_1.default.green(lockPackages[0].version);
                    }
                    else if (lock && lockPackages.length === 1) {
                        // good lockfile, but no manifest - will cause problems building
                        foundTauriVersions.push(lockPackages[0].version);
                        tauriVersion = chalk_1.default.green(lockPackages[0].version) + " (" + chalk_1.default.red('no manifest') + ")";
                    }
                    else {
                        manifestVersion = function () {
                            var tauri = manifest === null || manifest === void 0 ? void 0 : manifest.dependencies.tauri;
                            if (tauri) {
                                if (typeof tauri === 'string') {
                                    foundTauriVersions.push(tauri);
                                    return chalk_1.default.yellow(tauri);
                                }
                                else if (tauri.version) {
                                    foundTauriVersions.push(tauri.version);
                                    return chalk_1.default.yellow(tauri.version);
                                }
                                else if (tauri.path) {
                                    var manifestPath_1 = path_1.default.resolve(tauriDir, tauri.path, 'Cargo.toml');
                                    var manifestContent = readTomlFile(manifestPath_1);
                                    var pathVersion = manifestContent === null || manifestContent === void 0 ? void 0 : manifestContent.package.version;
                                    pathVersion = pathVersion
                                        ? chalk_1.default.yellow(pathVersion)
                                        : chalk_1.default.red(pathVersion);
                                    return "path:" + tauri.path + " [" + pathVersion + "]";
                                }
                            }
                            else {
                                return chalk_1.default.red('no manifest');
                            }
                            return chalk_1.default.red('unknown manifest');
                        };
                        lockVersion = void 0;
                        if (lock && lockPackages.length > 0) {
                            lockVersion = chalk_1.default.yellow(lockPackages.map(function (p) { return p.version; }).join(', '));
                        }
                        else if (lock && lockPackages.length === 0) {
                            lockVersion = chalk_1.default.red('unknown lockfile');
                        }
                        else {
                            lockVersion = chalk_1.default.red('no lockfile');
                        }
                        tauriVersion = manifestVersion() + " (" + chalk_1.default.yellow(lockVersion) + ")";
                    }
                    tauriVersionString = foundTauriVersions.reduce(function (old, current) { return (util_1.semverLt(old, current) ? current : old); }, '0.0.0');
                    return [4 /*yield*/, crateLatestVersion('tauri')];
                case 1:
                    latestTauriCore = _b.sent();
                    printInfo({
                        key: '  tauri.rs',
                        value: tauriVersion,
                        suffix: tauriVersionString !== '0.0.0' &&
                            latestTauriCore &&
                            util_1.semverLt(tauriVersionString, latestTauriCore)
                            ? "(" + chalk_1.default.red('outdated, latest: ' + latestTauriCore) + ")"
                            : undefined
                    });
                    try {
                        tauriMode = function (config) {
                            if (config.tauri.embeddedServer) {
                                return chalk_1.default.green(config.tauri.embeddedServer.active ? 'embedded-server' : 'no-server');
                            }
                            return chalk_1.default.red('unset');
                        };
                        configPath = path_1.default.join(tauriDir, 'tauri.conf.json');
                        config = non_webpack_require_1.default(configPath);
                        printInfo({ key: '  mode', value: tauriMode(config) });
                        printInfo({
                            key: '  build-type',
                            value: ((_a = config.tauri.bundle) === null || _a === void 0 ? void 0 : _a.active) ? 'bundle' : 'build'
                        });
                        printInfo({
                            key: '  CSP',
                            value: config.tauri.security ? config.tauri.security.csp : 'unset'
                        });
                        printInfo({
                            key: '  distDir',
                            value: config.build
                                ? chalk_1.default.green(config.build.distDir)
                                : chalk_1.default.red('unset')
                        });
                        printInfo({
                            key: '  devPath',
                            value: config.build
                                ? chalk_1.default.green(config.build.devPath)
                                : chalk_1.default.red('unset')
                        });
                    }
                    catch (_) { }
                    return [2 /*return*/];
            }
        });
    });
}
module.exports = function () { return __awaiter(void 0, void 0, void 0, function () {
    var stdout, match, edgeString, _a, tree, _i, _b, artifact;
    var _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0:
                printInfo({
                    key: 'Operating System',
                    value: chalk_1.default.green(os_1.default.type() + "(" + os_1.default.release() + ") - " + os_1.default.platform() + "/" + os_1.default.arch()),
                    section: true
                });
                if (os_1.default.platform() === 'win32') {
                    stdout = cross_spawn_1.sync('REG', [
                        'QUERY',
                        'HKEY_CLASSES_root\\AppX3xxs313wwkfjhythsb8q46xdsq8d2cvv\\Application',
                        '/v',
                        'ApplicationName'
                    ]).stdout;
                    match = /{(\S+)}/g.exec(stdout.toString());
                    if (match) {
                        edgeString = match[1];
                        printInfo({
                            key: 'Microsoft Edge',
                            value: edgeString.split('?')[0].replace('Microsoft.MicrosoftEdge_', '')
                        });
                    }
                }
                printInfo({ key: 'Node.js environment', section: true });
                printVersion({
                    key: '  Node.js',
                    version: process.version.slice(1),
                    targetVersion: package_json_1.default.engines.node.replace('>= ', '')
                });
                printVersion({
                    key: '  tauri.js',
                    version: package_json_1.default.version,
                    targetVersion: util_1.getNpmLatestVersion('tauri')
                });
                printInfo({ key: 'Rust environment', section: true });
                printInfo({
                    key: '  rustc',
                    value: getVersion('rustc', [], function (output) { return output.split(' ')[1]; })
                });
                printInfo({
                    key: '  cargo',
                    value: getVersion('cargo', [], function (output) { return output.split(' ')[1]; })
                });
                _a = printVersion;
                _c = {
                    key: '  tauri-bundler',
                    version: get_script_version_1.default('cargo', ['tauri-bundler'])
                };
                return [4 /*yield*/, crateLatestVersion('tauri-bundler')];
            case 1:
                _a.apply(void 0, [(_c.targetVersion = _d.sent(),
                        _c)]);
                printInfo({ key: 'Global packages', section: true });
                printInfo({ key: '  NPM', value: getVersion('npm') });
                printInfo({ key: '  yarn', value: getVersion('yarn') });
                printInfo({ key: 'App directory structure', section: true });
                tree = dirTree(app_paths_1.appDir);
                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
                for (_i = 0, _b = tree.children || []; _i < _b.length; _i++) {
                    artifact = _b[_i];
                    if (artifact.type === 'folder') {
                        console.log("/" + artifact.name);
                    }
                }
                return [4 /*yield*/, printAppInfo(app_paths_1.tauriDir)];
            case 2:
                _d.sent();
                return [2 /*return*/];
        }
    });
}); };
/* eslint-enable security/detect-non-literal-fs-filename */


/***/ }),

/***/ "./src/helpers/app-paths.ts":
/*!**********************************!*\
  !*** ./src/helpers/app-paths.ts ***!
  \**********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolve = exports.tauriDir = exports.appDir = void 0;
var fs_1 = __webpack_require__(/*! fs */ "fs");
var path_1 = __webpack_require__(/*! path */ "path");
var logger_1 = __importDefault(__webpack_require__(/*! ./logger */ "./src/helpers/logger.ts"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var warn = logger_1.default('tauri', chalk_1.default.red);
function resolvePath(basePath, dir) {
    return dir && path_1.isAbsolute(dir) ? dir : path_1.resolve(basePath, dir);
}
var getAppDir = function () {
    var dir = process.cwd();
    var count = 0;
    // only go up three folders max
    while (dir.length > 0 && !dir.endsWith(path_1.sep) && count <= 2) {
        if (fs_1.existsSync(path_1.join(dir, 'src-tauri', 'tauri.conf.json'))) {
            return dir;
        }
        count++;
        dir = path_1.normalize(path_1.join(dir, '..'));
    }
    warn("Couldn't find recognize the current folder as a part of a Tauri project");
    process.exit(1);
};
var appDir = getAppDir();
exports.appDir = appDir;
var tauriDir = path_1.resolve(appDir, 'src-tauri');
exports.tauriDir = tauriDir;
var resolveDir = {
    app: function (dir) { return resolvePath(appDir, dir); },
    tauri: function (dir) { return resolvePath(tauriDir, dir); }
};
exports.resolve = resolveDir;


/***/ }),

/***/ "./src/helpers/get-script-version.ts":
/*!*******************************************!*\
  !*** ./src/helpers/get-script-version.ts ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:22-26 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var cross_spawn_1 = __webpack_require__(/*! cross-spawn */ "cross-spawn");
function getVersion(command, args) {
    if (args === void 0) { args = []; }
    try {
        var child = cross_spawn_1.sync(command, __spreadArrays(args, ['--version']));
        if (child.status === 0) {
            var output = String(child.output[1]);
            return output.replace(/\n/g, '');
        }
        return null;
    }
    catch (err) {
        return null;
    }
}
exports.default = getVersion;


/***/ }),

/***/ "./src/helpers/logger.ts":
/*!*******************************!*\
  !*** ./src/helpers/logger.ts ***!
  \*******************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var ms_1 = __importDefault(__webpack_require__(/*! ms */ "ms"));
var prevTime;
exports.default = (function (banner, color) {
    if (color === void 0) { color = chalk_1.default.green; }
    return function (msg) {
        var curr = +new Date();
        var diff = curr - (prevTime || curr);
        prevTime = curr;
        if (msg) {
            console.log(
            // TODO: proper typings for color and banner
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call
            " " + color(String(banner)) + " " + msg + " " + chalk_1.default.green("+" + ms_1.default(diff)));
        }
        else {
            console.log();
        }
    };
});


/***/ }),

/***/ "./src/helpers/non-webpack-require.ts":
/*!********************************************!*\
  !*** ./src/helpers/non-webpack-require.ts ***!
  \********************************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
// this function has been moved to a module so we can mock it
exports.default = (function (path) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return require(path);
});


/***/ }),

/***/ "./src/helpers/spawn.ts":
/*!******************************!*\
  !*** ./src/helpers/spawn.ts ***!
  \******************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.spawnSync = exports.spawn = void 0;
var cross_spawn_1 = __importDefault(__webpack_require__(/*! cross-spawn */ "cross-spawn"));
var logger_1 = __importDefault(__webpack_require__(/*! ./logger */ "./src/helpers/logger.ts"));
var chalk_1 = __importDefault(__webpack_require__(/*! chalk */ "chalk"));
var log = logger_1.default('app:spawn');
var warn = logger_1.default('app:spawn', chalk_1.default.red);
/*
  Returns pid, takes onClose
 */
exports.spawn = function (cmd, params, cwd, onClose) {
    log("Running \"" + cmd + " " + params.join(' ') + "\"");
    log();
    // TODO: move to execa?
    var runner = cross_spawn_1.default(cmd, params, {
        stdio: 'inherit',
        cwd: cwd,
        env: process.env
    });
    runner.on('close', function (code) {
        log();
        if (code) {
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
            log("Command \"" + cmd + "\" failed with exit code: " + code);
        }
        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain
        onClose && onClose(code, runner.pid);
    });
    return runner.pid;
};
/*
  Returns nothing, takes onFail
 */
exports.spawnSync = function (cmd, params, cwd, onFail) {
    log("[sync] Running \"" + cmd + " " + params.join(' ') + "\"");
    log();
    var runner = cross_spawn_1.default.sync(cmd, params, {
        stdio: 'inherit',
        cwd: cwd
    });
    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing
    if (runner.status || runner.error) {
        warn();
        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
        warn("\u26A0\uFE0F  Command \"" + cmd + "\" failed with exit code: " + runner.status);
        if (runner.status === null) {
            warn("\u26A0\uFE0F  Please globally install \"" + cmd + "\"");
        }
        // eslint-disable-next-line @typescript-eslint/prefer-optional-chain
        onFail && onFail();
        process.exit(1);
    }
};


/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! default exports */
/*! export bin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export tauri [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export bugs [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export url [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export contributors [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 0 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 1 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export 2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export dependencies [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @tauri-apps/tauri-inliner [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @tauri-apps/toml [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export chalk [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export chokidar [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export cross-spawn [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export fast-glob [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export fs-extra [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export http-proxy [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export imagemin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export imagemin-optipng [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export imagemin-pngquant [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export imagemin-zopfli [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export inquirer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export is-png [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export is-reachable [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isbinaryfile [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export jsdom [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lodash [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export minimist [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export ms [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export png2icons [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export read-chunk [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export semver [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export sharp [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export webpack-merge [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export webpack-shell-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export description [provided] [no usage info] [missing usage info prevents renaming] */
/*! export devDependencies [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @babel/core [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @babel/preset-env [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @babel/preset-typescript [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @rollup/plugin-babel [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @rollup/plugin-commonjs [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @rollup/plugin-json [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @rollup/plugin-node-resolve [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @rollup/plugin-sucrase [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @rollup/plugin-typescript [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/cross-spawn [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/fs-extra [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/http-proxy [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/imagemin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/imagemin-optipng [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/inquirer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/jsdom [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/lodash [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/ms [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/semver [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @types/sharp [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @typescript-eslint/eslint-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export @typescript-eslint/parser [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export babel-jest [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export copy-webpack-plugin [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export dotenv [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-config-prettier [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-config-standard-with-typescript [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-plugin-import [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-plugin-lodash-template [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-plugin-node [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-plugin-promise [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-plugin-security [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export eslint-plugin-standard [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export husky [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export is-running [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export jest [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export jest-mock-process [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lint-staged [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lockfile-lint [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export prettier [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export promise [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export raw-loader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export rimraf [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export rollup [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export rollup-plugin-terser [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export rollup-plugin-typescript2 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export toml-loader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export ts-loader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export tslib [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export typescript [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export typescript-json-validator [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export webpack [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export webpack-cli [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export webpack-node-externals [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export engines [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export node [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export npm [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export yarn [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export funding [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export type [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export url [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export homepage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export husky [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export hooks [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export pre-commit [provided] [no usage info] [missing usage info prevents renaming] */
/*!     other exports [not provided] [no usage info] */
/*!   other exports [not provided] [no usage info] */
/*! export license [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lint-staged [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export *.{js,jsx,ts,tsx,md,html,css,json} [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export *.{ts,tsx} [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export name [provided] [no usage info] [missing usage info prevents renaming] */
/*! export publishConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export access [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export repository [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export type [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export url [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export resolutions [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export ** /lodash [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export scripts [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build-release [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build:api [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build:tauri[rust] [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build:typevalidators [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export build:webpack [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export format [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export format:check [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lint [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lint-fix [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export lint:lockfile [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export prepublishOnly [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export pretest [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export test [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export test:local [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = JSON.parse("{\"name\":\"tauri\",\"version\":\"0.13.0\",\"description\":\"Multi-binding collection of libraries and templates for building Tauri apps\",\"bin\":{\"tauri\":\"./bin/tauri.js\"},\"funding\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/tauri\"},\"scripts\":{\"build\":\"yarn build:api && yarn build:webpack\",\"build:webpack\":\"rimraf ./dist && yarn build:typevalidators && webpack --progress\",\"build:typevalidators\":\"node ./build/type-validators\",\"build:api\":\"rimraf ./api && rollup -c --silent\",\"build-release\":\"yarn build:api && rimraf ./dist && yarn build:typevalidators && webpack\",\"test\":\"jest --runInBand --no-cache --testPathIgnorePatterns=\\\"(build|dev)\\\"\",\"pretest\":\"yarn build\",\"prepublishOnly\":\"yarn build-release\",\"test:local\":\"jest --runInBand\",\"lint\":\"eslint --ext ts \\\"./src/**/*.ts\\\" \\\"./api-src/**/*.ts\\\"\",\"lint-fix\":\"eslint --fix --ext ts \\\"./src/**/*.ts\\\" \\\"./api-src/**/*.ts\\\"\",\"lint:lockfile\":\"lockfile-lint --path yarn.lock --type yarn --validate-https --allowed-hosts npm yarn\",\"format\":\"prettier --write --end-of-line=auto !./**/mutation-observer.js !./**/config.validator.js \\\"./**/*.{js,jsx,ts,tsx,html,css,json}\\\" --ignore-path .gitignore\",\"format:check\":\"prettier --check --end-of-line=auto !./**/mutation-observer.js \\\"./**/*.{js,jsx,ts,tsx,html,css,json}\\\" --ignore-path .gitignore\",\"build:tauri[rust]\":\"cd ../tauri && TAURI_DIST_DIR=../../test/fixture/dist TAURI_DIR=../test/fixture cargo publish --dry-run --allow-dirty\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/tauri-apps/tauri.git\"},\"contributors\":[\"Tauri Team <team@tauri-apps.org> (https://tauri.studio)\",\"Daniel Thompson-Yvetot <denjell@sfosc.org>\",\"Lucas Fernandes Gonçalves Nogueira <lucas@tauri.studio>\"],\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/tauri-apps/tauri/issues\"},\"homepage\":\"https://github.com/tauri-apps/tauri#readme\",\"publishConfig\":{\"access\":\"public\"},\"engines\":{\"node\":\">= 10.17.0\",\"npm\":\">= 6.6.0\",\"yarn\":\">= 1.19.1\"},\"dependencies\":{\"@tauri-apps/tauri-inliner\":\"1.14.1\",\"@tauri-apps/toml\":\"2.2.4\",\"chalk\":\"4.1.0\",\"chokidar\":\"3.4.3\",\"cross-spawn\":\"7.0.3\",\"fast-glob\":\"3.2.4\",\"fs-extra\":\"9.0.1\",\"http-proxy\":\"1.18.1\",\"imagemin\":\"7.0.1\",\"imagemin-optipng\":\"8.0.0\",\"imagemin-pngquant\":\"9.0.1\",\"imagemin-zopfli\":\"7.0.0\",\"inquirer\":\"7.3.3\",\"is-png\":\"2.0.0\",\"is-reachable\":\"5.0.0\",\"isbinaryfile\":\"4.0.6\",\"jsdom\":\"16.4.0\",\"lodash\":\"4.17.20\",\"minimist\":\"1.2.5\",\"ms\":\"2.1.2\",\"png2icons\":\"2.0.1\",\"read-chunk\":\"3.2.0\",\"semver\":\"7.3.2\",\"sharp\":\"0.26.2\",\"webpack-merge\":\"5.2.0\",\"webpack-shell-plugin\":\"0.5.0\"},\"devDependencies\":{\"@babel/core\":\"7.12.3\",\"@babel/preset-env\":\"7.12.1\",\"@babel/preset-typescript\":\"7.12.1\",\"@rollup/plugin-babel\":\"5.2.1\",\"@rollup/plugin-commonjs\":\"15.1.0\",\"@rollup/plugin-json\":\"4.1.0\",\"@rollup/plugin-node-resolve\":\"9.0.0\",\"@rollup/plugin-sucrase\":\"3.1.0\",\"@rollup/plugin-typescript\":\"6.0.0\",\"@types/cross-spawn\":\"6.0.2\",\"@types/fs-extra\":\"9.0.2\",\"@types/http-proxy\":\"1.17.4\",\"@types/imagemin\":\"7.0.0\",\"@types/imagemin-optipng\":\"5.2.0\",\"@types/inquirer\":\"7.3.1\",\"@types/jsdom\":\"16.2.4\",\"@types/lodash\":\"4.14.162\",\"@types/ms\":\"0.7.31\",\"@types/semver\":\"7.3.4\",\"@types/sharp\":\"0.26.0\",\"@typescript-eslint/eslint-plugin\":\"4.4.1\",\"@typescript-eslint/parser\":\"4.4.1\",\"babel-jest\":\"26.5.2\",\"copy-webpack-plugin\":\"6.2.1\",\"dotenv\":\"8.2.0\",\"eslint\":\"7.11.0\",\"eslint-config-prettier\":\"6.13.0\",\"eslint-config-standard-with-typescript\":\"19.0.1\",\"eslint-plugin-import\":\"2.22.1\",\"eslint-plugin-lodash-template\":\"0.19.0\",\"eslint-plugin-node\":\"11.1.0\",\"eslint-plugin-promise\":\"4.2.1\",\"eslint-plugin-security\":\"1.4.0\",\"eslint-plugin-standard\":\"4.0.1\",\"husky\":\"4.3.0\",\"is-running\":\"2.1.0\",\"jest\":\"26.5.3\",\"jest-mock-process\":\"1.4.0\",\"lint-staged\":\"10.4.2\",\"lockfile-lint\":\"4.3.7\",\"prettier\":\"2.1.2\",\"promise\":\"8.1.0\",\"raw-loader\":\"4.0.2\",\"rimraf\":\"3.0.2\",\"rollup\":\"2.32.0\",\"rollup-plugin-terser\":\"7.0.2\",\"rollup-plugin-typescript2\":\"0.28.0\",\"toml-loader\":\"1.0.0\",\"ts-loader\":\"8.0.5\",\"tslib\":\"2.0.3\",\"typescript\":\"4.0.3\",\"typescript-json-validator\":\"2.4.2\",\"webpack\":\"5.1.3\",\"webpack-cli\":\"4.0.0\",\"webpack-node-externals\":\"2.5.2\"},\"resolutions\":{\"**/lodash\":\">=4.17.19\"},\"husky\":{\"hooks\":{\"pre-commit\":\"lint-staged\"}},\"lint-staged\":{\"*.{js,jsx,ts,tsx,md,html,css,json}\":\"prettier --write --end-of-line=auto !./**/mutation-observer.js !./**/config.validator.js \\\"./**/*.{js,jsx,ts,tsx,html,css,json}\\\" --ignore-path .gitignore\",\"*.{ts,tsx}\":\"eslint --fix --ext ts ./src/**/*.ts ./api-src/**/*.ts\"}}");

/***/ }),

/***/ "@tauri-apps/toml":
/*!***********************************!*\
  !*** external "@tauri-apps/toml" ***!
  \***********************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("@tauri-apps/toml");;

/***/ }),

/***/ "chalk":
/*!************************!*\
  !*** external "chalk" ***!
  \************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("chalk");;

/***/ }),

/***/ "cross-spawn":
/*!******************************!*\
  !*** external "cross-spawn" ***!
  \******************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("cross-spawn");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("fs");;

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("https");;

/***/ }),

/***/ "ms":
/*!*********************!*\
  !*** external "ms" ***!
  \*********************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("ms");;

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("os");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("path");;

/***/ }),

/***/ "semver":
/*!*************************!*\
  !*** external "semver" ***!
  \*************************/
/*! dynamic exports */
/*! exports [maybe provided (runtime-defined)] [no usage info] */
/*! runtime requirements: module */
/***/ ((module) => {

module.exports = require("semver");;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./src/api/info.ts");
/******/ })()
;
});
//# sourceMappingURL=info.js.map